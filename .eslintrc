{
  "parserOptions": {
    "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    },
    "project": [
      "./tsconfig.json"
    ]
  },
  "env": {
    "es6": true,
    "browser": true
  },
  "settings": {
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    },
    "import/resolver": {
      "node": {
        "paths": [
          "src"
        ]
      }
    }
  },
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "jest",
    "unicorn",
    "react", 
    "react-hooks"
  ],
  "extends": [
    "airbnb-typescript",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "semi": [
      "error",
      "never"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-shadow": "off",
    "no-console": "off",
    "react/prop-types": "off",
    "no-param-reassign": "off",
    "react/jsx-props-no-spreading": "off",
    "consistent-return": "off",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "no-return-assign": "off",
    // note you must disable the base rule as it can report incorrect errors
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "react-hooks/exhaustive-deps": "off",
    // Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
    "no-prototype-builtins": "off",
    // https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html
    "import/prefer-default-export": "off",
    "import/no-default-export": "off",
    // Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
    "react/destructuring-assignment": "off",
    // No jsx extension: https://github.com/facebook/create-react-app/issues/87#issuecomment-234627904
    "react/jsx-filename-extension": "off",
    // Makes no sense to allow type inferrence for expression parameters, but require typing the response
    "@typescript-eslint/explicit-function-return-type": "off",
    // Common abbreviations are known and readable
    "unicorn/prevent-abbreviations": "off",
    "class-methods-use-this": "off",
    "unicorn/no-null": "off",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "no-unexpected-multiline": "error",
    "proseWrap": "off"
  },
}
